   0  $accept : %entry% $end

   1  prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC initial_patch stmts_opt END_EXEC END_PROG

   2  initial_goto :

   3  initial_patch :

   4  defines_opt :
   5              | defines

   6  defines : define
   7          | defines define

   8  define : def_header stmts

   9  def_header : DEFINE_NEW_INSTRUCTION ID AS

  10  stmts_opt :
  11            | stmts

  12  stmts : stmt
  13        | stmts SEMI stmt
  14        | stmts SEMI

  15  stmt : simple_stmt
  16       | if_head THEN stmt
  17       | if_then ELSE stmt
  18       | iter_head stmt
  19       | while_head stmt

  20  reg_stmt : simple_stmt
  21           | if_then ELSE reg_stmt
  22           | iter_head reg_stmt
  23           | while_head reg_stmt

  24  if_head : IF test
  25          | IF test_diff

  26  then_part : THEN reg_stmt

  27  if_then : if_head then_part

  28  simple_stmt : TURN_LEFT
  29              | TURN_OFF
  30              | MOVE
  31              | PICK_BEEPER
  32              | PUT_BEEPER
  33              | BEGIN stmts END
  34              | ID
  35              | REG SET INT
  36              | REG INC
  37              | REG DEC
  38              | MAX REG REG
  39              | MIN REG REG

  40  while_head : WHILE mark test DO

  41  mark :

  42  iter_head : ITERATE INT TIMES
  43            | ITERATE REG TIMES

  44  test : NEXT_TO_A_BEEPER
  45       | NOT_NEXT_TO_A_BEEPER
  46       | FRONT_IS_CLEAR
  47       | FRONT_IS_BLOCKED
  48       | LEFT_IS_CLEAR
  49       | LEFT_IS_BLOCKED
  50       | RIGHT_IS_CLEAR
  51       | RIGHT_IS_BLOCKED
  52       | FACING_NORTH
  53       | NOT_FACING_NORTH
  54       | FACING_EAST
  55       | NOT_FACING_EAST
  56       | FACING_SOUTH
  57       | NOT_FACING_SOUTH
  58       | FACING_WEST
  59       | NOT_FACING_WEST
  60       | ANY_BEEPERS_IN_BEEPER_BAG
  61       | NO_BEEPERS_IN_BEEPER_BAG
  62       | REG NE INT

  63  test_diff : REG EQ INT

  64  %entry% : '\001' prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . prog  (64)

	BEGIN_PROG  shift 3
	.  error

	prog  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	prog : BEGIN_PROG . initial_goto defines_opt BEGIN_EXEC initial_patch stmts_opt END_EXEC END_PROG  (1)
	initial_goto : .  (2)

	.  reduce 2

	initial_goto  goto 5


state 4
	%entry% : '\001' prog .  (64)

	.  reduce 64


state 5
	prog : BEGIN_PROG initial_goto . defines_opt BEGIN_EXEC initial_patch stmts_opt END_EXEC END_PROG  (1)
	defines_opt : .  (4)

	DEFINE_NEW_INSTRUCTION  shift 6
	BEGIN_EXEC  reduce 4

	defines_opt  goto 7
	defines  goto 8
	define  goto 9
	def_header  goto 10


state 6
	def_header : DEFINE_NEW_INSTRUCTION . ID AS  (9)

	ID  shift 11
	.  error


state 7
	prog : BEGIN_PROG initial_goto defines_opt . BEGIN_EXEC initial_patch stmts_opt END_EXEC END_PROG  (1)

	BEGIN_EXEC  shift 12
	.  error


state 8
	defines_opt : defines .  (5)
	defines : defines . define  (7)

	DEFINE_NEW_INSTRUCTION  shift 6
	BEGIN_EXEC  reduce 5

	define  goto 13
	def_header  goto 10


state 9
	defines : define .  (6)

	.  reduce 6


state 10
	define : def_header . stmts  (8)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	.  error

	stmts  goto 27
	stmt  goto 28
	simple_stmt  goto 29
	if_head  goto 30
	if_then  goto 31
	iter_head  goto 32
	while_head  goto 33


state 11
	def_header : DEFINE_NEW_INSTRUCTION ID . AS  (9)

	AS  shift 34
	.  error


state 12
	prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC . initial_patch stmts_opt END_EXEC END_PROG  (1)
	initial_patch : .  (3)

	.  reduce 3

	initial_patch  goto 35


state 13
	defines : defines define .  (7)

	.  reduce 7


state 14
	simple_stmt : MOVE .  (30)

	.  reduce 30


state 15
	simple_stmt : TURN_LEFT .  (28)

	.  reduce 28


state 16
	simple_stmt : TURN_OFF .  (29)

	.  reduce 29


state 17
	simple_stmt : PICK_BEEPER .  (31)

	.  reduce 31


state 18
	simple_stmt : PUT_BEEPER .  (32)

	.  reduce 32


state 19
	simple_stmt : BEGIN . stmts END  (33)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	.  error

	stmts  goto 36
	stmt  goto 28
	simple_stmt  goto 29
	if_head  goto 30
	if_then  goto 31
	iter_head  goto 32
	while_head  goto 33


state 20
	iter_head : ITERATE . INT TIMES  (42)
	iter_head : ITERATE . REG TIMES  (43)

	REG  shift 37
	INT  shift 38
	.  error


state 21
	while_head : WHILE . mark test DO  (40)
	mark : .  (41)

	.  reduce 41

	mark  goto 39


state 22
	if_head : IF . test  (24)
	if_head : IF . test_diff  (25)

	NEXT_TO_A_BEEPER  shift 40
	NOT_NEXT_TO_A_BEEPER  shift 41
	FRONT_IS_CLEAR  shift 42
	FRONT_IS_BLOCKED  shift 43
	LEFT_IS_CLEAR  shift 44
	LEFT_IS_BLOCKED  shift 45
	RIGHT_IS_CLEAR  shift 46
	RIGHT_IS_BLOCKED  shift 47
	FACING_NORTH  shift 48
	NOT_FACING_NORTH  shift 49
	FACING_EAST  shift 50
	NOT_FACING_EAST  shift 51
	FACING_SOUTH  shift 52
	NOT_FACING_SOUTH  shift 53
	FACING_WEST  shift 54
	NOT_FACING_WEST  shift 55
	ANY_BEEPERS_IN_BEEPER_BAG  shift 56
	NO_BEEPERS_IN_BEEPER_BAG  shift 57
	REG  shift 58
	.  error

	test  goto 59
	test_diff  goto 60


state 23
	simple_stmt : MAX . REG REG  (38)

	REG  shift 61
	.  error


state 24
	simple_stmt : MIN . REG REG  (39)

	REG  shift 62
	.  error


state 25
	simple_stmt : REG . SET INT  (35)
	simple_stmt : REG . INC  (36)
	simple_stmt : REG . DEC  (37)

	SET  shift 63
	INC  shift 64
	DEC  shift 65
	.  error


state 26
	simple_stmt : ID .  (34)

	.  reduce 34


state 27
	define : def_header stmts .  (8)
	stmts : stmts . SEMI stmt  (13)
	stmts : stmts . SEMI  (14)

	SEMI  shift 66
	BEGIN_EXEC  reduce 8
	DEFINE_NEW_INSTRUCTION  reduce 8


state 28
	stmts : stmt .  (12)

	.  reduce 12


state 29
	stmt : simple_stmt .  (15)

	.  reduce 15


state 30
	stmt : if_head . THEN stmt  (16)
	if_then : if_head . then_part  (27)

	THEN  shift 67
	.  error

	then_part  goto 68


state 31
	stmt : if_then . ELSE stmt  (17)

	ELSE  shift 69
	.  error


state 32
	stmt : iter_head . stmt  (18)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	.  error

	stmt  goto 70
	simple_stmt  goto 29
	if_head  goto 30
	if_then  goto 31
	iter_head  goto 32
	while_head  goto 33


state 33
	stmt : while_head . stmt  (19)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	.  error

	stmt  goto 71
	simple_stmt  goto 29
	if_head  goto 30
	if_then  goto 31
	iter_head  goto 32
	while_head  goto 33


state 34
	def_header : DEFINE_NEW_INSTRUCTION ID AS .  (9)

	.  reduce 9


state 35
	prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC initial_patch . stmts_opt END_EXEC END_PROG  (1)
	stmts_opt : .  (10)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	END_EXEC  reduce 10

	stmts_opt  goto 72
	stmts  goto 73
	stmt  goto 28
	simple_stmt  goto 29
	if_head  goto 30
	if_then  goto 31
	iter_head  goto 32
	while_head  goto 33


state 36
	stmts : stmts . SEMI stmt  (13)
	stmts : stmts . SEMI  (14)
	simple_stmt : BEGIN stmts . END  (33)

	SEMI  shift 66
	END  shift 74
	.  error


state 37
	iter_head : ITERATE REG . TIMES  (43)

	TIMES  shift 75
	.  error


state 38
	iter_head : ITERATE INT . TIMES  (42)

	TIMES  shift 76
	.  error


state 39
	while_head : WHILE mark . test DO  (40)

	NEXT_TO_A_BEEPER  shift 40
	NOT_NEXT_TO_A_BEEPER  shift 41
	FRONT_IS_CLEAR  shift 42
	FRONT_IS_BLOCKED  shift 43
	LEFT_IS_CLEAR  shift 44
	LEFT_IS_BLOCKED  shift 45
	RIGHT_IS_CLEAR  shift 46
	RIGHT_IS_BLOCKED  shift 47
	FACING_NORTH  shift 48
	NOT_FACING_NORTH  shift 49
	FACING_EAST  shift 50
	NOT_FACING_EAST  shift 51
	FACING_SOUTH  shift 52
	NOT_FACING_SOUTH  shift 53
	FACING_WEST  shift 54
	NOT_FACING_WEST  shift 55
	ANY_BEEPERS_IN_BEEPER_BAG  shift 56
	NO_BEEPERS_IN_BEEPER_BAG  shift 57
	REG  shift 77
	.  error

	test  goto 78


state 40
	test : NEXT_TO_A_BEEPER .  (44)

	.  reduce 44


state 41
	test : NOT_NEXT_TO_A_BEEPER .  (45)

	.  reduce 45


state 42
	test : FRONT_IS_CLEAR .  (46)

	.  reduce 46


state 43
	test : FRONT_IS_BLOCKED .  (47)

	.  reduce 47


state 44
	test : LEFT_IS_CLEAR .  (48)

	.  reduce 48


state 45
	test : LEFT_IS_BLOCKED .  (49)

	.  reduce 49


state 46
	test : RIGHT_IS_CLEAR .  (50)

	.  reduce 50


state 47
	test : RIGHT_IS_BLOCKED .  (51)

	.  reduce 51


state 48
	test : FACING_NORTH .  (52)

	.  reduce 52


state 49
	test : NOT_FACING_NORTH .  (53)

	.  reduce 53


state 50
	test : FACING_EAST .  (54)

	.  reduce 54


state 51
	test : NOT_FACING_EAST .  (55)

	.  reduce 55


state 52
	test : FACING_SOUTH .  (56)

	.  reduce 56


state 53
	test : NOT_FACING_SOUTH .  (57)

	.  reduce 57


state 54
	test : FACING_WEST .  (58)

	.  reduce 58


state 55
	test : NOT_FACING_WEST .  (59)

	.  reduce 59


state 56
	test : ANY_BEEPERS_IN_BEEPER_BAG .  (60)

	.  reduce 60


state 57
	test : NO_BEEPERS_IN_BEEPER_BAG .  (61)

	.  reduce 61


state 58
	test : REG . NE INT  (62)
	test_diff : REG . EQ INT  (63)

	EQ  shift 79
	NE  shift 80
	.  error


state 59
	if_head : IF test .  (24)

	.  reduce 24


state 60
	if_head : IF test_diff .  (25)

	.  reduce 25


state 61
	simple_stmt : MAX REG . REG  (38)

	REG  shift 81
	.  error


state 62
	simple_stmt : MIN REG . REG  (39)

	REG  shift 82
	.  error


state 63
	simple_stmt : REG SET . INT  (35)

	INT  shift 83
	.  error


state 64
	simple_stmt : REG INC .  (36)

	.  reduce 36


state 65
	simple_stmt : REG DEC .  (37)

	.  reduce 37


state 66
	stmts : stmts SEMI . stmt  (13)
	stmts : stmts SEMI .  (14)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	BEGIN_EXEC  reduce 14
	END_EXEC  reduce 14
	SEMI  reduce 14
	END  reduce 14
	DEFINE_NEW_INSTRUCTION  reduce 14

	stmt  goto 84
	simple_stmt  goto 29
	if_head  goto 30
	if_then  goto 31
	iter_head  goto 32
	while_head  goto 33


state 67
	stmt : if_head THEN . stmt  (16)
	then_part : THEN . reg_stmt  (26)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	.  error

	stmt  goto 85
	simple_stmt  goto 86
	if_head  goto 30
	if_then  goto 87
	iter_head  goto 88
	while_head  goto 89
	reg_stmt  goto 90


state 68
	if_then : if_head then_part .  (27)

	.  reduce 27


state 69
	stmt : if_then ELSE . stmt  (17)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	.  error

	stmt  goto 91
	simple_stmt  goto 29
	if_head  goto 30
	if_then  goto 31
	iter_head  goto 32
	while_head  goto 33


state 70
	stmt : iter_head stmt .  (18)

	.  reduce 18


state 71
	stmt : while_head stmt .  (19)

	.  reduce 19


state 72
	prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC initial_patch stmts_opt . END_EXEC END_PROG  (1)

	END_EXEC  shift 92
	.  error


state 73
	stmts_opt : stmts .  (11)
	stmts : stmts . SEMI stmt  (13)
	stmts : stmts . SEMI  (14)

	SEMI  shift 66
	END_EXEC  reduce 11


state 74
	simple_stmt : BEGIN stmts END .  (33)

	.  reduce 33


state 75
	iter_head : ITERATE REG TIMES .  (43)

	.  reduce 43


state 76
	iter_head : ITERATE INT TIMES .  (42)

	.  reduce 42


state 77
	test : REG . NE INT  (62)

	NE  shift 80
	.  error


state 78
	while_head : WHILE mark test . DO  (40)

	DO  shift 93
	.  error


state 79
	test_diff : REG EQ . INT  (63)

	INT  shift 94
	.  error


state 80
	test : REG NE . INT  (62)

	INT  shift 95
	.  error


state 81
	simple_stmt : MAX REG REG .  (38)

	.  reduce 38


state 82
	simple_stmt : MIN REG REG .  (39)

	.  reduce 39


state 83
	simple_stmt : REG SET INT .  (35)

	.  reduce 35


state 84
	stmts : stmts SEMI stmt .  (13)

	.  reduce 13


state 85
	stmt : if_head THEN stmt .  (16)

	.  reduce 16


state 86
	stmt : simple_stmt .  (15)
	reg_stmt : simple_stmt .  (20)

	BEGIN_EXEC  reduce 15
	END_EXEC  reduce 15
	SEMI  reduce 15
	END  reduce 15
	ELSE  reduce 20
	DEFINE_NEW_INSTRUCTION  reduce 15


state 87
	stmt : if_then . ELSE stmt  (17)
	reg_stmt : if_then . ELSE reg_stmt  (21)

	ELSE  shift 96
	.  error


state 88
	stmt : iter_head . stmt  (18)
	reg_stmt : iter_head . reg_stmt  (22)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	.  error

	stmt  goto 70
	simple_stmt  goto 86
	if_head  goto 30
	if_then  goto 87
	iter_head  goto 88
	while_head  goto 89
	reg_stmt  goto 97


state 89
	stmt : while_head . stmt  (19)
	reg_stmt : while_head . reg_stmt  (23)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	.  error

	stmt  goto 71
	simple_stmt  goto 86
	if_head  goto 30
	if_then  goto 87
	iter_head  goto 88
	while_head  goto 89
	reg_stmt  goto 98


state 90
	then_part : THEN reg_stmt .  (26)

	.  reduce 26


state 91
	stmt : if_then ELSE stmt .  (17)

	.  reduce 17


state 92
	prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC initial_patch stmts_opt END_EXEC . END_PROG  (1)

	END_PROG  shift 99
	.  error


state 93
	while_head : WHILE mark test DO .  (40)

	.  reduce 40


state 94
	test_diff : REG EQ INT .  (63)

	.  reduce 63


state 95
	test : REG NE INT .  (62)

	.  reduce 62


state 96
	stmt : if_then ELSE . stmt  (17)
	reg_stmt : if_then ELSE . reg_stmt  (21)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	MAX  shift 23
	MIN  shift 24
	REG  shift 25
	ID  shift 26
	.  error

	stmt  goto 91
	simple_stmt  goto 86
	if_head  goto 30
	if_then  goto 87
	iter_head  goto 88
	while_head  goto 89
	reg_stmt  goto 100


state 97
	reg_stmt : iter_head reg_stmt .  (22)

	.  reduce 22


state 98
	reg_stmt : while_head reg_stmt .  (23)

	.  reduce 23


state 99
	prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC initial_patch stmts_opt END_EXEC END_PROG .  (1)

	.  reduce 1


state 100
	reg_stmt : if_then ELSE reg_stmt .  (21)

	.  reduce 21


53 terminals, 22 nonterminals
65 grammar rules, 101 states
