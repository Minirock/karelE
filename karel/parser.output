   0  $accept : %entry% $end

   1  prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC initial_patch stmts_opt END_EXEC END_PROG

   2  initial_goto :

   3  initial_patch :

   4  defines_opt :
   5              | defines

   6  defines : define
   7          | defines define

   8  define : def_header stmts

   9  def_header : DEFINE_NEW_INSTRUCTION ID AS

  10  stmts_opt :
  11            | stmts

  12  stmts : stmt
  13        | stmts SEMI stmt
  14        | stmts SEMI

  15  stmt : simple_stmt
  16       | if_head THEN stmt
  17       | if_then ELSE stmt
  18       | iter_head stmt
  19       | while_head stmt

  20  reg_stmt : simple_stmt
  21           | if_then ELSE reg_stmt
  22           | iter_head reg_stmt
  23           | while_head reg_stmt

  24  if_head : IF test
  25          | IF test_reg

  26  then_part : THEN reg_stmt

  27  if_then : if_head then_part

  28  simple_stmt : TURN_LEFT
  29              | TURN_OFF
  30              | MOVE
  31              | PICK_BEEPER
  32              | PUT_BEEPER
  33              | BEGIN stmts END
  34              | ID
  35              | REG EQ INT
  36              | REG PLUG_EQ INT
  37              | REG MINUS_EQ INT
  38              | REG PLUG_EQ REG
  39              | REG MINUS_EQ REG
  40              | SET REG
  41              | CLEAR REG
  42              | NOT REG
  43              | REG ASSIGN test
  44              | AND REG REG
  45              | OR REG REG

  46  while_head : WHILE mark test DO

  47  mark :

  48  iter_head : ITERATE INT TIMES
  49            | ITERATE REG TIMES

  50  test : NEXT_TO_A_BEEPER
  51       | NOT_NEXT_TO_A_BEEPER
  52       | FRONT_IS_CLEAR
  53       | FRONT_IS_BLOCKED
  54       | LEFT_IS_CLEAR
  55       | LEFT_IS_BLOCKED
  56       | RIGHT_IS_CLEAR
  57       | RIGHT_IS_BLOCKED
  58       | FACING_NORTH
  59       | NOT_FACING_NORTH
  60       | FACING_EAST
  61       | NOT_FACING_EAST
  62       | FACING_SOUTH
  63       | NOT_FACING_SOUTH
  64       | FACING_WEST
  65       | NOT_FACING_WEST
  66       | ANY_BEEPERS_IN_BEEPER_BAG
  67       | NO_BEEPERS_IN_BEEPER_BAG
  68       | REG SLASH_EQ INT
  69       | REG SLASH_EQ REG
  70       | REG
  71       | NOT REG

  72  test_reg : REG EQ_EQ INT
  73           | REG EQ_EQ REG

  74  %entry% : '\001' prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . prog  (74)

	BEGIN_PROG  shift 3
	.  error

	prog  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	prog : BEGIN_PROG . initial_goto defines_opt BEGIN_EXEC initial_patch stmts_opt END_EXEC END_PROG  (1)
	initial_goto : .  (2)

	.  reduce 2

	initial_goto  goto 5


state 4
	%entry% : '\001' prog .  (74)

	.  reduce 74


state 5
	prog : BEGIN_PROG initial_goto . defines_opt BEGIN_EXEC initial_patch stmts_opt END_EXEC END_PROG  (1)
	defines_opt : .  (4)

	DEFINE_NEW_INSTRUCTION  shift 6
	BEGIN_EXEC  reduce 4

	defines_opt  goto 7
	defines  goto 8
	define  goto 9
	def_header  goto 10


state 6
	def_header : DEFINE_NEW_INSTRUCTION . ID AS  (9)

	ID  shift 11
	.  error


state 7
	prog : BEGIN_PROG initial_goto defines_opt . BEGIN_EXEC initial_patch stmts_opt END_EXEC END_PROG  (1)

	BEGIN_EXEC  shift 12
	.  error


state 8
	defines_opt : defines .  (5)
	defines : defines . define  (7)

	DEFINE_NEW_INSTRUCTION  shift 6
	BEGIN_EXEC  reduce 5

	define  goto 13
	def_header  goto 10


state 9
	defines : define .  (6)

	.  reduce 6


state 10
	define : def_header . stmts  (8)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	.  error

	stmts  goto 30
	stmt  goto 31
	simple_stmt  goto 32
	if_head  goto 33
	if_then  goto 34
	iter_head  goto 35
	while_head  goto 36


state 11
	def_header : DEFINE_NEW_INSTRUCTION ID . AS  (9)

	AS  shift 37
	.  error


state 12
	prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC . initial_patch stmts_opt END_EXEC END_PROG  (1)
	initial_patch : .  (3)

	.  reduce 3

	initial_patch  goto 38


state 13
	defines : defines define .  (7)

	.  reduce 7


state 14
	simple_stmt : MOVE .  (30)

	.  reduce 30


state 15
	simple_stmt : TURN_LEFT .  (28)

	.  reduce 28


state 16
	simple_stmt : TURN_OFF .  (29)

	.  reduce 29


state 17
	simple_stmt : PICK_BEEPER .  (31)

	.  reduce 31


state 18
	simple_stmt : PUT_BEEPER .  (32)

	.  reduce 32


state 19
	simple_stmt : BEGIN . stmts END  (33)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	.  error

	stmts  goto 39
	stmt  goto 31
	simple_stmt  goto 32
	if_head  goto 33
	if_then  goto 34
	iter_head  goto 35
	while_head  goto 36


state 20
	iter_head : ITERATE . INT TIMES  (48)
	iter_head : ITERATE . REG TIMES  (49)

	REG  shift 40
	INT  shift 41
	.  error


state 21
	while_head : WHILE . mark test DO  (46)
	mark : .  (47)

	.  reduce 47

	mark  goto 42


state 22
	if_head : IF . test  (24)
	if_head : IF . test_reg  (25)

	NEXT_TO_A_BEEPER  shift 43
	NOT_NEXT_TO_A_BEEPER  shift 44
	FRONT_IS_CLEAR  shift 45
	FRONT_IS_BLOCKED  shift 46
	LEFT_IS_CLEAR  shift 47
	LEFT_IS_BLOCKED  shift 48
	RIGHT_IS_CLEAR  shift 49
	RIGHT_IS_BLOCKED  shift 50
	FACING_NORTH  shift 51
	NOT_FACING_NORTH  shift 52
	FACING_EAST  shift 53
	NOT_FACING_EAST  shift 54
	FACING_SOUTH  shift 55
	NOT_FACING_SOUTH  shift 56
	FACING_WEST  shift 57
	NOT_FACING_WEST  shift 58
	ANY_BEEPERS_IN_BEEPER_BAG  shift 59
	NO_BEEPERS_IN_BEEPER_BAG  shift 60
	REG  shift 61
	NOT  shift 62
	.  error

	test  goto 63
	test_reg  goto 64


state 23
	simple_stmt : REG . EQ INT  (35)
	simple_stmt : REG . PLUG_EQ INT  (36)
	simple_stmt : REG . MINUS_EQ INT  (37)
	simple_stmt : REG . PLUG_EQ REG  (38)
	simple_stmt : REG . MINUS_EQ REG  (39)
	simple_stmt : REG . ASSIGN test  (43)

	EQ  shift 65
	PLUG_EQ  shift 66
	MINUS_EQ  shift 67
	ASSIGN  shift 68
	.  error


state 24
	simple_stmt : NOT . REG  (42)

	REG  shift 69
	.  error


state 25
	simple_stmt : AND . REG REG  (44)

	REG  shift 70
	.  error


state 26
	simple_stmt : OR . REG REG  (45)

	REG  shift 71
	.  error


state 27
	simple_stmt : SET . REG  (40)

	REG  shift 72
	.  error


state 28
	simple_stmt : CLEAR . REG  (41)

	REG  shift 73
	.  error


state 29
	simple_stmt : ID .  (34)

	.  reduce 34


state 30
	define : def_header stmts .  (8)
	stmts : stmts . SEMI stmt  (13)
	stmts : stmts . SEMI  (14)

	SEMI  shift 74
	BEGIN_EXEC  reduce 8
	DEFINE_NEW_INSTRUCTION  reduce 8


state 31
	stmts : stmt .  (12)

	.  reduce 12


state 32
	stmt : simple_stmt .  (15)

	.  reduce 15


state 33
	stmt : if_head . THEN stmt  (16)
	if_then : if_head . then_part  (27)

	THEN  shift 75
	.  error

	then_part  goto 76


state 34
	stmt : if_then . ELSE stmt  (17)

	ELSE  shift 77
	.  error


state 35
	stmt : iter_head . stmt  (18)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	.  error

	stmt  goto 78
	simple_stmt  goto 32
	if_head  goto 33
	if_then  goto 34
	iter_head  goto 35
	while_head  goto 36


state 36
	stmt : while_head . stmt  (19)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	.  error

	stmt  goto 79
	simple_stmt  goto 32
	if_head  goto 33
	if_then  goto 34
	iter_head  goto 35
	while_head  goto 36


state 37
	def_header : DEFINE_NEW_INSTRUCTION ID AS .  (9)

	.  reduce 9


state 38
	prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC initial_patch . stmts_opt END_EXEC END_PROG  (1)
	stmts_opt : .  (10)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	END_EXEC  reduce 10

	stmts_opt  goto 80
	stmts  goto 81
	stmt  goto 31
	simple_stmt  goto 32
	if_head  goto 33
	if_then  goto 34
	iter_head  goto 35
	while_head  goto 36


state 39
	stmts : stmts . SEMI stmt  (13)
	stmts : stmts . SEMI  (14)
	simple_stmt : BEGIN stmts . END  (33)

	SEMI  shift 74
	END  shift 82
	.  error


state 40
	iter_head : ITERATE REG . TIMES  (49)

	TIMES  shift 83
	.  error


state 41
	iter_head : ITERATE INT . TIMES  (48)

	TIMES  shift 84
	.  error


state 42
	while_head : WHILE mark . test DO  (46)

	NEXT_TO_A_BEEPER  shift 43
	NOT_NEXT_TO_A_BEEPER  shift 44
	FRONT_IS_CLEAR  shift 45
	FRONT_IS_BLOCKED  shift 46
	LEFT_IS_CLEAR  shift 47
	LEFT_IS_BLOCKED  shift 48
	RIGHT_IS_CLEAR  shift 49
	RIGHT_IS_BLOCKED  shift 50
	FACING_NORTH  shift 51
	NOT_FACING_NORTH  shift 52
	FACING_EAST  shift 53
	NOT_FACING_EAST  shift 54
	FACING_SOUTH  shift 55
	NOT_FACING_SOUTH  shift 56
	FACING_WEST  shift 57
	NOT_FACING_WEST  shift 58
	ANY_BEEPERS_IN_BEEPER_BAG  shift 59
	NO_BEEPERS_IN_BEEPER_BAG  shift 60
	REG  shift 85
	NOT  shift 62
	.  error

	test  goto 86


state 43
	test : NEXT_TO_A_BEEPER .  (50)

	.  reduce 50


state 44
	test : NOT_NEXT_TO_A_BEEPER .  (51)

	.  reduce 51


state 45
	test : FRONT_IS_CLEAR .  (52)

	.  reduce 52


state 46
	test : FRONT_IS_BLOCKED .  (53)

	.  reduce 53


state 47
	test : LEFT_IS_CLEAR .  (54)

	.  reduce 54


state 48
	test : LEFT_IS_BLOCKED .  (55)

	.  reduce 55


state 49
	test : RIGHT_IS_CLEAR .  (56)

	.  reduce 56


state 50
	test : RIGHT_IS_BLOCKED .  (57)

	.  reduce 57


state 51
	test : FACING_NORTH .  (58)

	.  reduce 58


state 52
	test : NOT_FACING_NORTH .  (59)

	.  reduce 59


state 53
	test : FACING_EAST .  (60)

	.  reduce 60


state 54
	test : NOT_FACING_EAST .  (61)

	.  reduce 61


state 55
	test : FACING_SOUTH .  (62)

	.  reduce 62


state 56
	test : NOT_FACING_SOUTH .  (63)

	.  reduce 63


state 57
	test : FACING_WEST .  (64)

	.  reduce 64


state 58
	test : NOT_FACING_WEST .  (65)

	.  reduce 65


state 59
	test : ANY_BEEPERS_IN_BEEPER_BAG .  (66)

	.  reduce 66


state 60
	test : NO_BEEPERS_IN_BEEPER_BAG .  (67)

	.  reduce 67


state 61
	test : REG . SLASH_EQ INT  (68)
	test : REG . SLASH_EQ REG  (69)
	test : REG .  (70)
	test_reg : REG . EQ_EQ INT  (72)
	test_reg : REG . EQ_EQ REG  (73)

	EQ_EQ  shift 87
	SLASH_EQ  shift 88
	THEN  reduce 70


state 62
	test : NOT . REG  (71)

	REG  shift 89
	.  error


state 63
	if_head : IF test .  (24)

	.  reduce 24


state 64
	if_head : IF test_reg .  (25)

	.  reduce 25


state 65
	simple_stmt : REG EQ . INT  (35)

	INT  shift 90
	.  error


state 66
	simple_stmt : REG PLUG_EQ . INT  (36)
	simple_stmt : REG PLUG_EQ . REG  (38)

	REG  shift 91
	INT  shift 92
	.  error


state 67
	simple_stmt : REG MINUS_EQ . INT  (37)
	simple_stmt : REG MINUS_EQ . REG  (39)

	REG  shift 93
	INT  shift 94
	.  error


state 68
	simple_stmt : REG ASSIGN . test  (43)

	NEXT_TO_A_BEEPER  shift 43
	NOT_NEXT_TO_A_BEEPER  shift 44
	FRONT_IS_CLEAR  shift 45
	FRONT_IS_BLOCKED  shift 46
	LEFT_IS_CLEAR  shift 47
	LEFT_IS_BLOCKED  shift 48
	RIGHT_IS_CLEAR  shift 49
	RIGHT_IS_BLOCKED  shift 50
	FACING_NORTH  shift 51
	NOT_FACING_NORTH  shift 52
	FACING_EAST  shift 53
	NOT_FACING_EAST  shift 54
	FACING_SOUTH  shift 55
	NOT_FACING_SOUTH  shift 56
	FACING_WEST  shift 57
	NOT_FACING_WEST  shift 58
	ANY_BEEPERS_IN_BEEPER_BAG  shift 59
	NO_BEEPERS_IN_BEEPER_BAG  shift 60
	REG  shift 85
	NOT  shift 62
	.  error

	test  goto 95


state 69
	simple_stmt : NOT REG .  (42)

	.  reduce 42


state 70
	simple_stmt : AND REG . REG  (44)

	REG  shift 96
	.  error


state 71
	simple_stmt : OR REG . REG  (45)

	REG  shift 97
	.  error


state 72
	simple_stmt : SET REG .  (40)

	.  reduce 40


state 73
	simple_stmt : CLEAR REG .  (41)

	.  reduce 41


state 74
	stmts : stmts SEMI . stmt  (13)
	stmts : stmts SEMI .  (14)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	BEGIN_EXEC  reduce 14
	END_EXEC  reduce 14
	SEMI  reduce 14
	END  reduce 14
	DEFINE_NEW_INSTRUCTION  reduce 14

	stmt  goto 98
	simple_stmt  goto 32
	if_head  goto 33
	if_then  goto 34
	iter_head  goto 35
	while_head  goto 36


state 75
	stmt : if_head THEN . stmt  (16)
	then_part : THEN . reg_stmt  (26)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	.  error

	stmt  goto 99
	simple_stmt  goto 100
	if_head  goto 33
	if_then  goto 101
	iter_head  goto 102
	while_head  goto 103
	reg_stmt  goto 104


state 76
	if_then : if_head then_part .  (27)

	.  reduce 27


state 77
	stmt : if_then ELSE . stmt  (17)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	.  error

	stmt  goto 105
	simple_stmt  goto 32
	if_head  goto 33
	if_then  goto 34
	iter_head  goto 35
	while_head  goto 36


state 78
	stmt : iter_head stmt .  (18)

	.  reduce 18


state 79
	stmt : while_head stmt .  (19)

	.  reduce 19


state 80
	prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC initial_patch stmts_opt . END_EXEC END_PROG  (1)

	END_EXEC  shift 106
	.  error


state 81
	stmts_opt : stmts .  (11)
	stmts : stmts . SEMI stmt  (13)
	stmts : stmts . SEMI  (14)

	SEMI  shift 74
	END_EXEC  reduce 11


state 82
	simple_stmt : BEGIN stmts END .  (33)

	.  reduce 33


state 83
	iter_head : ITERATE REG TIMES .  (49)

	.  reduce 49


state 84
	iter_head : ITERATE INT TIMES .  (48)

	.  reduce 48


state 85
	test : REG . SLASH_EQ INT  (68)
	test : REG . SLASH_EQ REG  (69)
	test : REG .  (70)

	SLASH_EQ  shift 88
	BEGIN_EXEC  reduce 70
	END_EXEC  reduce 70
	SEMI  reduce 70
	END  reduce 70
	DO  reduce 70
	ELSE  reduce 70
	DEFINE_NEW_INSTRUCTION  reduce 70


state 86
	while_head : WHILE mark test . DO  (46)

	DO  shift 107
	.  error


state 87
	test_reg : REG EQ_EQ . INT  (72)
	test_reg : REG EQ_EQ . REG  (73)

	REG  shift 108
	INT  shift 109
	.  error


state 88
	test : REG SLASH_EQ . INT  (68)
	test : REG SLASH_EQ . REG  (69)

	REG  shift 110
	INT  shift 111
	.  error


state 89
	test : NOT REG .  (71)

	.  reduce 71


state 90
	simple_stmt : REG EQ INT .  (35)

	.  reduce 35


state 91
	simple_stmt : REG PLUG_EQ REG .  (38)

	.  reduce 38


state 92
	simple_stmt : REG PLUG_EQ INT .  (36)

	.  reduce 36


state 93
	simple_stmt : REG MINUS_EQ REG .  (39)

	.  reduce 39


state 94
	simple_stmt : REG MINUS_EQ INT .  (37)

	.  reduce 37


state 95
	simple_stmt : REG ASSIGN test .  (43)

	.  reduce 43


state 96
	simple_stmt : AND REG REG .  (44)

	.  reduce 44


state 97
	simple_stmt : OR REG REG .  (45)

	.  reduce 45


state 98
	stmts : stmts SEMI stmt .  (13)

	.  reduce 13


state 99
	stmt : if_head THEN stmt .  (16)

	.  reduce 16


state 100
	stmt : simple_stmt .  (15)
	reg_stmt : simple_stmt .  (20)

	BEGIN_EXEC  reduce 15
	END_EXEC  reduce 15
	SEMI  reduce 15
	END  reduce 15
	ELSE  reduce 20
	DEFINE_NEW_INSTRUCTION  reduce 15


state 101
	stmt : if_then . ELSE stmt  (17)
	reg_stmt : if_then . ELSE reg_stmt  (21)

	ELSE  shift 112
	.  error


state 102
	stmt : iter_head . stmt  (18)
	reg_stmt : iter_head . reg_stmt  (22)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	.  error

	stmt  goto 78
	simple_stmt  goto 100
	if_head  goto 33
	if_then  goto 101
	iter_head  goto 102
	while_head  goto 103
	reg_stmt  goto 113


state 103
	stmt : while_head . stmt  (19)
	reg_stmt : while_head . reg_stmt  (23)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	.  error

	stmt  goto 79
	simple_stmt  goto 100
	if_head  goto 33
	if_then  goto 101
	iter_head  goto 102
	while_head  goto 103
	reg_stmt  goto 114


state 104
	then_part : THEN reg_stmt .  (26)

	.  reduce 26


state 105
	stmt : if_then ELSE stmt .  (17)

	.  reduce 17


state 106
	prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC initial_patch stmts_opt END_EXEC . END_PROG  (1)

	END_PROG  shift 115
	.  error


state 107
	while_head : WHILE mark test DO .  (46)

	.  reduce 46


state 108
	test_reg : REG EQ_EQ REG .  (73)

	.  reduce 73


state 109
	test_reg : REG EQ_EQ INT .  (72)

	.  reduce 72


state 110
	test : REG SLASH_EQ REG .  (69)

	.  reduce 69


state 111
	test : REG SLASH_EQ INT .  (68)

	.  reduce 68


state 112
	stmt : if_then ELSE . stmt  (17)
	reg_stmt : if_then ELSE . reg_stmt  (21)

	MOVE  shift 14
	TURN_LEFT  shift 15
	TURN_OFF  shift 16
	PICK_BEEPER  shift 17
	PUT_BEEPER  shift 18
	BEGIN  shift 19
	ITERATE  shift 20
	WHILE  shift 21
	IF  shift 22
	REG  shift 23
	NOT  shift 24
	AND  shift 25
	OR  shift 26
	SET  shift 27
	CLEAR  shift 28
	ID  shift 29
	.  error

	stmt  goto 105
	simple_stmt  goto 100
	if_head  goto 33
	if_then  goto 101
	iter_head  goto 102
	while_head  goto 103
	reg_stmt  goto 116


state 113
	reg_stmt : iter_head reg_stmt .  (22)

	.  reduce 22


state 114
	reg_stmt : while_head reg_stmt .  (23)

	.  reduce 23


state 115
	prog : BEGIN_PROG initial_goto defines_opt BEGIN_EXEC initial_patch stmts_opt END_EXEC END_PROG .  (1)

	.  reduce 1


state 116
	reg_stmt : if_then ELSE reg_stmt .  (21)

	.  reduce 21


57 terminals, 22 nonterminals
75 grammar rules, 117 states
